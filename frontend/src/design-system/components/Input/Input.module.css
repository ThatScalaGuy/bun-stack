.container {
  display: flex;
  flex-direction: column;
}

.fullWidth {
  width: 100%;
}

.inputWrapper {
  position: relative;
  display: flex;
  align-items: center;
}

.input {
  flex: 1;
  border: 1px solid var(--color-border);
  border-radius: var(--border-radius-md);
  background-color: var(--color-background);
  color: var(--color-text);
  transition: all var(--transition-normal);
  width: 100%;
  outline: none;
}

.input:focus {
  border-color: var(--color-primary);
  box-shadow: var(--shadow-focus);
}

.input::placeholder {
  color: var(--color-text-light);
  opacity: 0.7;
}

/* Size variants */
.small .input {
  height: 30px;
  padding: 0 var(--spacing-3);
  font-size: var(--font-size-sm);
}

.medium .input {
  height: 36px;
  padding: 0 var(--spacing-3);
  font-size: var(--font-size-md);
}

.large .input {
  height: 44px;
  padding: 0 var(--spacing-4);
  font-size: var(--font-size-lg);
}

/* Style variants */
.outlined .input {
  background-color: var(--color-background);
}

.filled .input {
  background-color: var(--color-background-alt);
}

/* Icons */
.startIcon,
.endIcon {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--color-text-light);
  z-index: 1;
}

.startIcon {
  left: var(--spacing-3);
}

.endIcon {
  right: var(--spacing-3);
}

.inputWrapper:has(.startIcon) .input {
  padding-left: calc(var(--spacing-3) * 2 + 16px); /* Icon width ~ 16px */
}

.inputWrapper:has(.endIcon) .input {
  padding-right: calc(var(--spacing-3) * 2 + 16px); /* Icon width ~ 16px */
}

/* Label */
.label {
  margin-bottom: var(--spacing-2);
  font-size: var(--font-size-md);
  font-weight: 500;
  color: var(--color-text);
}

.required {
  color: var(--color-danger);
  margin-left: var(--spacing-1);
}

/* Helper and error text */
.helperText {
  margin-top: var(--spacing-1);
  font-size: var(--font-size-sm);
  color: var(--color-text-light);
}

.errorText {
  margin-top: var(--spacing-1);
  font-size: var(--font-size-sm);
  color: var(--color-danger);
}

/* Error state */
.hasError .input {
  border-color: var(--color-danger);
}

/* Disabled state */
.input:disabled {
  opacity: 0.6;
  cursor: not-allowed;
  background-color: var(--color-background-alt);
}

/* Read-only state */
.input:read-only {
  background-color: var(--color-background-alt);
  cursor: default;
}
